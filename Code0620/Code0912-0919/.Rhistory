transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", alpha = 0.5
)
residual_sample_df[1:100]
residual_sample_df[101:200]
sample_all_data_df[1:5,:10]
sample_all_data_df[1:5,1:10]
mean.by.station = apply(sample_all_data_df[,-c(1:5)],1,mean)
mean = mean(sample_all_data_df[,-c(1:5)])
mean = mean(as.matrix(sample_all_data_df[,-c(1:5)]))
residual_sample_df = sample_all_data_spread_df$Precip_total - rep(mean.by.year, each=1, times = 100) - rep(mean.by.station, each=100, times = 1) + mean
plot(residual_sample_df)
quilt.plot(sample_all_data_spread_df$LONGITUDE,
sample_all_data_spread_df$LATITUDE,
residual_sample_df,nx=20,ny=20, main="Residual vs (LON + LAT)")
residual_sample_df
length(residual_sample_df)
plot(residual_sample_df[1:100])
data = data.frame(lon = sample_all_data_df$LONGITUDE, lat = sample_all_data_df$LATITUDE)
transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", alpha = residual_sample_df[1:100]
)
data = data.frame(lon = sample_all_data_df$LONGITUDE, lat = sample_all_data_df$LATITUDE)
transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", alpha = residual_sample_df[1:100]+10
)
data = data.frame(lon = sample_all_data_df$LONGITUDE, lat = sample_all_data_df$LATITUDE)
transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", size= residual_sample_df[1:100]+10
)
data = data.frame(lon = sample_all_data_df$LONGITUDE, lat = sample_all_data_df$LATITUDE)
transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", size= residual_sample_df[1:100]
)
residual_sample_df[1:100]
quilt.plot(sample_all_data_spread_df$LONGITUDE,
sample_all_data_spread_df$LATITUDE,
residual_sample_df[1:100],nx=20,ny=20, main="Residual vs (LON + LAT)")
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100],nx=20,ny=20, main="Residual vs (LON + LAT)")
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100],nx=40,ny=40, main="Residual vs (LON + LAT)")
i=1
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100+(i-1)*100],nx=40,ny=40, main="Residual vs (LON + LAT)")
i=2
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100+(i-1)*100],nx=40,ny=40, main="Residual vs (LON + LAT)")
layout(matrix(1:4,2,2))
for(i in 1:4){
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100+(i-1)*100],nx=40,ny=40, main="Residual vs (LON + LAT)")
}
layout(matrix(1:4,2,2))
for(i in 1:4){
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100+(i-1)*100],nx=40,ny=40, main="Residual vs (LON + LAT)")
}
layout(matrix(1:4,2,2))
for(i in 1:4){
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100+(i-1)*100],nx=40,ny=40, main="Residual vs (LON + LAT)")
}
sample_all_data_spread_df[1:100]
sample_all_data_spread_df[1:100,]
sample_all_data_spread_df[1:5,]
sample_all_data_spread_df[1:5+"100",]
sample_all_data_spread_df[1:5+100,]
library("dplyr")
my_txt = readLines("9641C_201112_F52.avg")
my_txt.str = strsplit(my_txt[1],split="")[[1]]
paste(my_txt.str[97:101], collapse ='')
STATION_ID = sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][1:6], collapse ='')})
YEAR = as.numeric(sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][8:11], collapse ='')}))
Precip_total = as.numeric(sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][97:101], collapse ='')}))
Flag = sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][102:102], collapse ='')})
table(Flag)
#only select no flag observations
Precip_info = data.frame(STATION_ID = STATION_ID,
YEAR = YEAR,
Precip_total = Precip_total,
Flag = Flag)
#########################
mean(Precip_info$Precip_total==-9999)
#each station's -9999 count
count_missing_for_station = aggregate(Precip_info$Precip_total==-9999, by=list(station_id = Precip_info$STATION_ID), FUN=sum)
sum(count_missing_for_station == 0) #number of station with no missing observation
#check the number of observation for these station
no_missing_station = count_missing_for_station$station_id[count_missing_for_station$x == 0]
no_missing_station_count_observation = table(filter(Precip_info, Precip_info$STATION_ID %in% no_missing_station)$STATION_ID) #
sum(no_missing_station_count_observation >= 117)# 1138 stations having no missing observation and 117 observations
#select station having 117 observations with no missing
no_missing_117_station = names(no_missing_station_count_observation)[no_missing_station_count_observation == 117]
length(no_missing_117_station)
Precip_info_filter_df = filter(Precip_info, Precip_info$STATION_ID %in% no_missing_117_station)
#1138 stations, each having 117 observations
temp_num_station = nrow(Precip_info_filter_df)/117
all_year = matrix(0,nrow = temp_num_station, ncol = 117)
colnames(all_year) = 1895:2011
for(i in 1:temp_num_station){
all_year[i,]=Precip_info_filter_df$Precip_total[1:117+(i-1)*117]
}
Precip_info_filter_transform_df = data.frame(STATION_ID = Precip_info_filter_df$STATION_ID[(1:temp_num_station)*117])
Precip_info_filter_transform_df = cbind(Precip_info_filter_transform_df, all_year)
station_info.txt = readLines("ushcn-stations.txt")
station_info.str = strsplit(station_info.txt [1],split="")[[1]]
STATION_ID = sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][1:6],
collapse ='')})
LATITUDE = as.numeric(sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][8:15],
collapse ='')}))
LONGITUDE = as.numeric(sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][17:25],
collapse ='')}))
STATE = sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][34:35],
collapse ='')})
ELEVATION = as.numeric(sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][27:32],
collapse ='')}))
station_info = data.frame(STATION_ID = STATION_ID, LATITUDE = LATITUDE, LONGITUDE = LONGITUDE, ELEVATION = ELEVATION,
STATE = STATE)
set.seed(0)
sample_station_ID = sample(Precip_info_filter_transform_df$STATION_ID,size = 100, replace = FALSE)
temp_df = filter(Precip_info_filter_transform_df, Precip_info_filter_transform_df$STATION_ID %in% sample_station_ID)
temp = inner_join(temp_df, station_info, by="STATION_ID")
sample_all_data_df = temp[,c(1,119:122,2:101)] #STATION_ID, "LATITUDE"  "LONGITUDE" "ELEVATION" "STATE"
set.seed(0)
sample_station_ID = sample(Precip_info_filter_transform_df$STATION_ID,size = 100, replace = FALSE)
temp_df = filter(Precip_info_filter_transform_df, Precip_info_filter_transform_df$STATION_ID %in% sample_station_ID)
temp = inner_join(temp_df, station_info, by="STATION_ID")
sample_all_data_df = temp[,c(1,119:122,2:101)] #STATION_ID, "LATITUDE"  "LONGITUDE" "ELEVATION" "STATE"
?replicate
temp.Precip = numeric(100*100)
temp.year = rep(1895:1994, each=1,times = 100)
temp.station = NULL
temp =  sample_all_data_df[,1:5]
temp.station = temp[rep(1:100, each=100,times = 1),]
temp.station[1:10]
temp.station[1:10,]
temp.Precip = numeric(100*100)
temp.year = rep(1895:1994, each=1,times = 100)
temp.station = NULL
temp =  sample_all_data_df[,1:5]
temp.station = temp[rep(1:100, each=100,times = 1),]
for(i in 1:100){
temp.Precip[1:100+(i-1)*100] = as.numeric(sample_all_data_df[i,6:105])
}
sample_all_data_spread_df = cbind(temp.station, matrix(temp.year,100*100,1))
sample_all_data_spread_df = cbind(sample_all_data_spread_df,matrix(temp.Precip, 100*100,1))
colnames(sample_all_data_spread_df)[6:7] = c("YEAR","Precip_total")
sample_all_data_spread_df
temp.Precip = numeric(100*100)
temp.year = rep(1895:1994, each=1,times = 100)
temp.station = NULL
temp =  sample_all_data_df[,1:5]
temp.station = temp[rep(1:100, each=100,times = 1),]
for(i in 1:100){
temp.Precip[1:100+(i-1)*100] = as.numeric(sample_all_data_df[i,6:105])
}
sample_all_data_spread_df = cbind(temp.station, matrix(temp.year,100*100,1))
sample_all_data_spread_df = cbind(sample_all_data_spread_df,matrix(temp.Precip, 100*100,1))
colnames(sample_all_data_spread_df)[6:7] = c("YEAR","Precip_total")
library(usmap)
library(ggplot2)
library("rgdal")
data = data.frame(lon = sample_all_data_df$LONGITUDE, lat = sample_all_data_df$LATITUDE)
transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", alpha = 0.5
)
library("fields")
mean.by.year = apply(sample_all_data_df[,-c(1:5)],2,mean)#mean of each year
mean.by.station = apply(sample_all_data_df[,-c(1:5)],1,mean)#mean of each station
mean = mean(as.matrix(sample_all_data_df[,-c(1:5)]))#mean
residual_sample_df = sample_all_data_spread_df$Precip_total - rep(mean.by.year, each=1, times = 100) - rep(mean.by.station, each=100, times = 1) + mean
plot(residual_sample_df)
quilt.plot(sample_all_data_spread_df$LONGITUDE,
sample_all_data_spread_df$LATITUDE,
residual_sample_df,nx=20,ny=20, main="Residual vs (LON + LAT)")
layout(matrix(1:4,2,2))
for(i in 1:4){
quilt.plot(sample_all_data_spread_df$LONGITUDE[1:100],
sample_all_data_spread_df$LATITUDE[1:100],
residual_sample_df[1:100+(i-1)*100],nx=40,ny=40, main="Residual vs (LON + LAT)")
}
sample_all_data_spread_df$LONGITUDE[1:100]
layout(matrix(1:4,2,2))
for(i in 1:4){
quilt.plot(sample_all_data_spread_df$LONGITUDE[(1:100)*100-99],
sample_all_data_spread_df$LATITUDE[(1:100)*100-99],
residual_sample_df[(1:100)*100-99],nx=40,ny=40, main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
}
sample_all_data_spread_df$LONGITUDE[(1:100)*100-99]
sample_all_data_spread_df$LATITUDE[(1:100)*100-99]
residual_sample_df[(1:100)*100-99]
i=1
quilt.plot(sample_all_data_spread_df$LONGITUDE[(1:100)*100-99],
sample_all_data_spread_df$LATITUDE[(1:100)*100-99],
residual_sample_df[(1:100)*100-99],nx=40,ny=40,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
quilt.plot(sample_all_data_spread_df$LONGITUDE[(1:100)*100-99],
sample_all_data_spread_df$LATITUDE[(1:100)*100-99],
residual_sample_df[(1:100)*100-99],nx=40,ny=40,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
layout(matrix(1:4,2,2))
for(i in 1:4){
idx = (0:99) * 100 + i
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=40,ny=40,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
}
idx = (0:99) * 100 + i
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=40,ny=40,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
idx = 100
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=40,ny=40,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
idx = 100:103
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=40,ny=40,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
idx = 100:103
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=10,ny=10,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
library("fields")
mean.by.year = apply(sample_all_data_df[,-c(1:5)],2,mean)#mean of each year
mean.by.station = apply(sample_all_data_df[,-c(1:5)],1,mean)#mean of each station
mean = mean(as.matrix(sample_all_data_df[,-c(1:5)]))#mean
residual_sample_df = sample_all_data_spread_df$Precip_total - rep(mean.by.year, each=1, times = 100) - rep(mean.by.station, each=100, times = 1) + mean
plot(residual_sample_df)
quilt.plot(sample_all_data_spread_df$LONGITUDE,
sample_all_data_spread_df$LATITUDE,
residual_sample_df,nx=20,ny=20, main="Residual vs (LON + LAT)")
idx = 1:100
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=10,ny=10,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
idx = (0:99) * 100 + i
idx
length(residual_sample_df)
layout(matrix(1:4,2,2))
for(i in 1:4){
idx = (0:99) * 100 + i
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=5,ny=5,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
}
layout(matrix(1:4,2,2))
for(i in 1:4){
idx = (0:99) * 100 + i
quilt.plot(sample_all_data_spread_df$LONGITUDE[idx],
sample_all_data_spread_df$LATITUDE[idx],
residual_sample_df[idx],nx=5,ny=5,
main=paste0("YEAR ",sample_all_data_spread_df[i],": Residual vs (LON + LAT)"))
}
library(gstat)
install.packages("gstat")
library(gstat)
?variogram
coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
v = variogram(residual_sample_df~1, sample_all_data_spread_df)
v
v.fit = fit.variogram(v, vgm(1, "Sph", 900, 1))
v.fit
?fit.variogram
f = function(x) attr(m.fit <<- fit.variogram(v, vgm(,"Mat",nugget=NA,kappa=x)),"SSErr")
optimize(f, c(0.1, 5))
v
library(gstat)
coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
v = variogram(residual_sample_df~1,
loc = ~sample_all_data_spread_df$LONGITUDE + sample_all_data_spread_df$LATITUDEsample_all_data_spread_df)
library(gstat)
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
v = variogram(residual_sample_df~1,
loc = ~sample_all_data_spread_df$LONGITUDE + sample_all_data_spread_df$LATITUDEsample_all_data_spread_df,
data = sample_all_data_spread_df)
```{r}
library(gstat)
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
v = variogram(residual_sample_df~1,
loc = ~sample_all_data_spread_df$LONGITUDE + sample_all_data_spread_df$LATITUDEsample_all_data_spread_df,
data = sample_all_data_spread_df)
plot(v)
v = variogram(residual_sample_df~1,
loc = ~LONGITUDE + LATITUDE,
data = sample_all_data_spread_df)
sample_all_data_spread_df
str(sample_all_data_spread_df)
v = variogram(residual_sample_df~1,
data = sample_all_data_spread_df)
plot(v)
?variogram
idx = 100 * (0:99)+1
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v)
idx = 100 * (0:99)+2
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v)
idx = 100 * (0:99)+3
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v)
library(gstat)
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
for(i in 1:5){
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
}
for(i in 1:5){
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
}
i=1
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
library(gstat)
layout(matrix(1:4,2,2))
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
for(i in 1:4){
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
}
layout(matrix(1:4,2,2))
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
for(i in 1:4){
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
}
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
library(gstat)
layout(matrix(1:4,2,2))
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
for(i in 1:4){
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
}
i=1
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
library(gstat)
layout(matrix(1:4,2,2))
#coordinates(sample_all_data_spread_df) = ~LONGITUDE + LATITUDE
for(i in 1:4){
idx = 100 * (0:99)+i
v = variogram(residual_sample_df[idx]~1,
data = sample_all_data_spread_df[idx,])
plot(v, main = paste0("Year: ", sample_all_data_spread_df$YEAR[i]))
}
setwd("//wolftech.ad.ncsu.edu/cos/stat/Redirect/ywang225/Desktop/Exp_lambda_basis/2019September/Code1108-1114/Code0912-0919")
getwd()
source("\\\\wolftech.ad.ncsu.edu/cos/stat/Redirect/ywang225/Desktop/Exp_lambda_basis/2019September/Code1108-1114/Code0912-0919/Part-II.Data_Generation.R")
Distance
sstr(sample_all_data_spread_df)
str(sample_all_data_spread_df)
library("dplyr")
my_txt = readLines("9641C_201112_F52.avg")
my_txt.str = strsplit(my_txt[1],split="")[[1]]
paste(my_txt.str[97:101], collapse ='')
STATION_ID = sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][1:6], collapse ='')})
YEAR = as.numeric(sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][8:11], collapse ='')}))
Precip_total = as.numeric(sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][97:101], collapse ='')}))
Flag = sapply(1:length(my_txt), function(idx){paste(strsplit(my_txt[idx],split="")[[1]][102:102], collapse ='')})
table(Flag)
#only select no flag observations
Precip_info = data.frame(STATION_ID = STATION_ID,
YEAR = YEAR,
Precip_total = Precip_total,
Flag = Flag)
#########################
mean(Precip_info$Precip_total==-9999)
#each station's -9999 count
count_missing_for_station = aggregate(Precip_info$Precip_total==-9999, by=list(station_id = Precip_info$STATION_ID), FUN=sum)
sum(count_missing_for_station == 0) #number of station with no missing observation
#check the number of observation for these station
no_missing_station = count_missing_for_station$station_id[count_missing_for_station$x == 0]
no_missing_station_count_observation = table(filter(Precip_info, Precip_info$STATION_ID %in% no_missing_station)$STATION_ID) #
sum(no_missing_station_count_observation >= 117)# 1138 stations having no missing observation and 117 observations
#select station having 117 observations with no missing
no_missing_117_station = names(no_missing_station_count_observation)[no_missing_station_count_observation == 117]
length(no_missing_117_station)
Precip_info_filter_df = filter(Precip_info, Precip_info$STATION_ID %in% no_missing_117_station)
#1138 stations, each having 117 observations
temp_num_station = nrow(Precip_info_filter_df)/117
all_year = matrix(0,nrow = temp_num_station, ncol = 117)
colnames(all_year) = 1895:2011
for(i in 1:temp_num_station){
all_year[i,]=Precip_info_filter_df$Precip_total[1:117+(i-1)*117]
}
Precip_info_filter_transform_df = data.frame(STATION_ID = Precip_info_filter_df$STATION_ID[(1:temp_num_station)*117])
Precip_info_filter_transform_df = cbind(Precip_info_filter_transform_df, all_year)
station_info.txt = readLines("ushcn-stations.txt")
station_info.str = strsplit(station_info.txt [1],split="")[[1]]
STATION_ID = sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][1:6],
collapse ='')})
LATITUDE = as.numeric(sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][8:15],
collapse ='')}))
LONGITUDE = as.numeric(sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][17:25],
collapse ='')}))
STATE = sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][34:35],
collapse ='')})
ELEVATION = as.numeric(sapply(1:length(station_info.txt), function(idx){paste(strsplit(station_info.txt[idx],split="")[[1]][27:32],
collapse ='')}))
station_info = data.frame(STATION_ID = STATION_ID, LATITUDE = LATITUDE, LONGITUDE = LONGITUDE, ELEVATION = ELEVATION,
STATE = STATE)
set.seed(0)
sample_station_ID = sample(Precip_info_filter_transform_df$STATION_ID,size = 100, replace = FALSE)
temp_df = filter(Precip_info_filter_transform_df, Precip_info_filter_transform_df$STATION_ID %in% sample_station_ID)
temp = inner_join(temp_df, station_info, by="STATION_ID")
sample_all_data_df = temp[,c(1,119:122,2:101)] #STATION_ID, "LATITUDE"  "LONGITUDE" "ELEVATION" "STATE"
temp.Precip = numeric(100*100)
temp.year = rep(1895:1994, each=1,times = 100)
temp.station = NULL
temp =  sample_all_data_df[,1:5]
temp.station = temp[rep(1:100, each=100,times = 1),]
for(i in 1:100){
temp.Precip[1:100+(i-1)*100] = as.numeric(sample_all_data_df[i,6:105])
}
sample_all_data_spread_df = cbind(temp.station, matrix(temp.year,100*100,1))
sample_all_data_spread_df = cbind(sample_all_data_spread_df,matrix(temp.Precip, 100*100,1))
colnames(sample_all_data_spread_df)[6:7] = c("YEAR","Precip_total")
library(usmap)
library(ggplot2)
library("rgdal")
data = data.frame(lon = sample_all_data_df$LONGITUDE, lat = sample_all_data_df$LATITUDE)
transformed_data <- usmap_transform(data)
plot_usmap(regions = "state") + geom_point(
data = transformed_data,
aes(x = lon.1, y = lat.1),
color = "red", alpha = 0.5
)
library("fields")
mean.by.year = apply(sample_all_data_df[,-c(1:5)],2,mean)#mean of each year
mean.by.station = apply(sample_all_data_df[,-c(1:5)],1,mean)#mean of each station
mean = mean(as.matrix(sample_all_data_df[,-c(1:5)]))#mean
residual_sample_df = sample_all_data_spread_df$Precip_total - rep(mean.by.year, each=1, times = 100) - rep(mean.by.station, each=100, times = 1) + mean
plot(residual_sample_df)
quilt.plot(sample_all_data_spread_df$LONGITUDE,
sample_all_data_spread_df$LATITUDE,
residual_sample_df,nx=20,ny=20, main="Residual vs (LON + LAT)")
source("\\\\wolftech.ad.ncsu.edu/cos/stat/Redirect/ywang225/Desktop/Exp_lambda_basis/2019September/Code1108-1114/Code0912-0919/Part-II.Data_Generation.R")
coord_matrix = c(sample_all_data_spread_df$LONGITUDE,sample_all_data_spread_df$LATITUDE)
coord_matrix = c(sample_all_data_spread_df$LONGITUDE,sample_all_data_spread_df$LATITUDE)
coord_matrix = coord_matrix[(1:100)*100,]
temp = c(sample_all_data_spread_df$LONGITUDE,sample_all_data_spread_df$LATITUDE)
coord_matrix = temp[(1:100)*100,]
dim(temp)
temp = cbind(sample_all_data_spread_df$LONGITUDE,sample_all_data_spread_df$LATITUDE)
coord_matrix = temp[(1:100)*100,]
dim(coord_map())
dim(coord_matrix
)
Distance(coord_matrix)
Distance_matrix = Distance(coord_matrix)
observation = matrix(residual_sample_df, nrow=100,ncol=100)
observation = matrix(residual_sample_df, nrow=100,ncol=100,byrow = FALSE )#r by n; each row is one year
observation = matrix(residual_sample_df, nrow=100,ncol=100,byrow = FALSE )#r by n; each row is one year
cov_matrix = cov(observation)
plot(as.vector(Distance_matrix), as.vector(cov_matrix))
range(cov_matrix)
range(cov_matrix)
